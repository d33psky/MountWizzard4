#
# GitHub actions for checking the installation of MW4 through scripts
#
# v 1.0, Michael Wuertenberger
#
name: test_scripts_pypi

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  gh: 'https://raw.githubusercontent.com/mworion/MountWizzard4/master/support/3.0/'

on:
  push:
    # Run this action on the trigger event when specific files are touched
    paths:
      - '.github/workflows/test_scripts_pypi.yml'
      - 'support/**'
      - 'setup.py'

jobs:
  
  install_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/setup-python@v4.5.0
        with:
          python-version: '3.9'
      
      - name: Install Script Run
        uses: suisei-cn/actions-download-file@v1.3.0
        with:
          url: ${{ env.gh }}startupPackage.zip
          target: .
      
      - name: MountWizzard4 Install
        shell: cmd
        run: |
          python -m zipfile -e startupPackage.zip .
          python startup.pyz --no-start --version 2.2.7
          dir
      
      - name: Run MountWizzard4
        shell: cmd
        run: |
          touch test.run
          touch test.txt
          python startup.pyz
          dir
  
  install_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4.5.0
        with:
          python-version: '3.9'
      - name: Install Head
        run: |
          sudo apt-get update
          sudo apt-get -y upgrade
          sudo apt-get install -y xvfb libxkbcommon-x11-0 x11-utils libxcb-icccm4
          sudo apt-get install -y libxcb-image0 libxcb-keysyms1 libxcb-randr0
          sudo apt-get install -y libxcb-render-util0 libpulse-mainloop-glib0
          sudo apt-get install -y libx11-xcb1 libxcb-xinerama0 libxcb-xkb1
          sudo apt-get install -y libxcb-keysyms1
        
      - name: Install Script Install
        uses: suisei-cn/actions-download-file@v1.3.0
        with:
          url: ${{ env.gh }}startupPackage.zip
          target: .
          
      - name: MountWizzard4 Install
        run: |
          python3 -m zipfile -e startupPackage.zip .
          python3 startup.pyz --no-start --version 2.2.7
          ls -la
  
      - name: Run MountWizzard4
        run: |
          touch test.run
          touch test.txt
          xvfb-run python3 startup.pyz
          ls -la
          
  install_macOS:
    runs-on: macos-latest
    steps:
      - uses: actions/setup-python@v4.5.0
        with:
          python-version: '3.9'

      - name: Install Script Install
        uses: suisei-cn/actions-download-file@v1.3.0
        with:
          url: ${{ env.gh }}startupPackage.zip
          target: .
          
      - name: MountWizzard4 Install
        run: |
          python3 -m zipfile -e startupPackage.zip .
          python3 startup.pyz --no-start --version 2.2.7
          ls -la
          
      - name: Run MountWizzard4
        run: |
          touch test.run
          touch test.txt
          python3 startup.pyz
          ls -la

  install_aarch64:
    # The host should always be linux
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 3 arch/distro combinations
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu22.04

    steps:
      - uses: actions/checkout@v3.3.0
      - uses: uraimo/run-on-arch-action@v2.5.0
        name: build_artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Mount the wheels directory as /artifacts in the container
          dockerRunArgs: |
            -v "${PWD}/support":/root/support

          # The shell to run commands with in the container
          shell: /bin/bash
          install: |
            apt-get update -y
            apt-get upgrade -y
            apt-get -y install python3-pip python3-venv python3-wheel
            apt-get -y install python3-pyqt5 apt-utils
  
  # Produce a binary artifact and place it in the mounted volume
          run: |
            python3 --version
            cd /root/support/3.0
            # python3 -m zipfile -e startupPackage.zip .
            # python3 startup.pyz --no-start
            cd ../wheels
            ls -la
            apt-get install pacman
            python3 -venv venv
            source ./venv/bin/activate
            pip list
            pacman -h
            pacman -F python-pyqt5-sip-12.11.1-1-aarch64.pkg.tar.xz
            pacman -F python-pyqt5-5.15.9-1-aarch64.pkg.tar.xz
            pip install mountwizzard4==3.0.1a0
            cat ./log/mw4*.log
            ls -la
