#
# GitHub actions for running the unit test of the mountwizzard4 package
#
# v0.1,  Michael Wuertenberger
#
name: scripts_install_2

on:
  push:
    # Run this action on the trigger event when specific files are touched
    paths:
      - '.github/workflows/scripts_install_2.yml'

jobs:
  build_job:
    # The host should always be linux
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    # Run steps on a matrix of 3 arch/distro combinations
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu20.04

    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: build_artifact
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            artifact_name: git-${{ matrix.distro }}_${{ matrix.arch }}

          # The shell to run commands with in the container
          shell: /bin/bash

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          #  apt-get -y install qt5-default pyqt5-dev pyqt5-dev-tools
          install: |
            apt-get update -y
            apt-get upgrade -y
            apt-get install -y software-properties-common
            add-apt-repository ppa:deadsnakes/ppa
            apt-get update -y
            apt-get -y install python3.9 python3-pip python3.9-venv python3.9-dev
          
          # Produce a binary artifact and place it in the mounted volume
          run: |
            ./support/2.0/Ubuntu/MW4_Install_aarch64_20_04.sh
  
      - name: upload_log
        uses: actions/upload-artifact@v2
        with:
          name: "log-${{ matrix.distro }}"
          path: install.log
