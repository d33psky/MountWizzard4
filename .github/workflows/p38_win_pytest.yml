# test script on python 3.8 and Windows
name: UnitTest Win

on:
  push:
    paths:
      - 'mw4/**'
      - 'tests/unittests/**'
      - 'setup.py'
      - '.github/workflows/p38_win_pytest.yml'

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build widgets and resource
      run: |
        python -m pip install --upgrade pip
        python -m pip install PyQt5
        python -m PyQt5.uic.pyuic mw4/gui/widgets/devicePopup.ui -o mw4/gui/widgets/devicePopup_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/hemisphere.ui -o mw4/gui/widgets/hemisphere_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/image.ui -o mw4/gui/widgets/image_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/keypad.ui -o mw4/gui/widgets/keypad_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/main.ui -o mw4/gui/widgets/main_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/measure.ui -o mw4/gui/widgets/measure_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/message.ui -o mw4/gui/widgets/message_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/satellite.ui -o mw4/gui/widgets/satellite_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/analyse.ui -o mw4/gui/widgets/analyse_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/mount3D.ui -o mw4/gui/widgets/mount3D_ui.py
        python -m PyQt5.uic.pyuic mw4/gui/widgets/simulator.ui -o mw4/gui/widgets/simulator_ui.py
        python -m PyQt5.pyrcc_main mw4/resource/resources.qrc -o mw4/resource/resources.py

    - name: Build package
      run: |
        pip install setuptools wheel
        python setup.py sdist

    - name: Install package
      run: |
        python -m pip install cython
        mv dist/mountwizzard*.* dist/mw.tar.gz
        python -m pip install dist/mw.tar.gz

    - name: Install pytest
      run: |
        python -m pip install pytest
        python -m pip install pytest-qt
        python -m pip install pytest-cov
        python -m pip install pytest-flake8
        python -m pip install pytest-pythonpath

    - name: Running unit tests
      run: |
        pytest tests/unit_tests/zLoader --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/zMainApp --cov-append --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/base --cov-append --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/gui/extWindows --cov-append --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/gui/mainWindow --cov-append --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/gui/mainWmixin --cov-append --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/gui/utilities --cov-append --cov=mw4/ --cov-report=xml
        pytest tests/unit_tests/logic --cov-append --cov=mw4/ --cov-report=xml

    - name: Upload coverage to codecov
      if: always()
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
