#
# v1.0, Michael Wuertenberger
#
name: unit_win

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  wid: 'mw4/gui/widgets/'
  uic: 'python -m PyQt5.uic.pyuic'
  ucc: 'python -m PyQt5.pyrcc_main'
  res: 'mw4/resource/'
  branch: 'master'

on:
  push:
    # Run this action on the trigger event when specific files are touched
    paths:
      - 'mw4/**'
      - 'tests/unit_tests/**'
      - 'setup.py'
      - 'tox.ini'
      - '.github/workflows/unit_win.yml'

jobs:
  build_widgets_resource:
    #
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{env.branch}}
          
      - name: build package
        uses: ./.github/actions/build_package

  run_tests_windows_1:
    #
    needs: build_widgets_resource
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/zLoader --cov=mw4/
          pytest tests/unit_tests/zUpdate --cov-append --cov=mw4/
          pytest tests/unit_tests/zMainApp --cov-append --cov=mw4/
          
      - name: rename_coveragefile
        run: mv .coverage cov1.dat
        
      - name: upload_coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./cov1.dat

  run_tests_windows_2:
    #
    needs: build_widgets_resource
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/base --cov=mw4/
          pytest tests/unit_tests/logic --cov-append --cov=mw4/
          pytest tests/unit_tests/mountcontrol --cov-append --cov=mw4/
          pytest tests/unit_tests/indibase --cov-append --cov=mw4/
          
      - name: rename_coveragefile
        run: mv .coverage cov2.dat
        
      - name: upload_coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./cov2.dat

  run_tests_windows_3:
    #
    needs: build_widgets_resource
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/gui/mainWmixin --cov=mw4/

      - name: rename_coveragefile
        run: mv .coverage cov3.dat
        
      - name: upload_coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./cov3.dat

  run_tests_windows_4:
    #
    needs: build_widgets_resource
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{env.branch}}
  
      - name: install package
        uses: ./.github/actions/setup_test_cov
  
      - name: running_unit_tests
        run: |
          pytest tests/unit_tests/gui/mainWindow --cov=mw4/
          pytest tests/unit_tests/gui/extWindows --cov-append --cov=mw4/
          pytest tests/unit_tests/gui/utilities --cov-append --cov=mw4/
          
      - name: rename_coveragefile
        run: mv .coverage cov4.dat
        
      - name: upload_coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./cov4.dat

  coverage:
    #
    needs: [ run_tests_windows_1, run_tests_windows_2,
             run_tests_windows_3, run_tests_windows_4]
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{env.branch}}
  
    - uses: actions/download-artifact@v2
      with:
        name: widgets
        path: mw4/gui/widgets

    - uses: actions/download-artifact@v2
      with:
        name: resource
        path: mw4/resource
    
    - name: collecting_data
      uses: actions/download-artifact@v2
      with:
        name: coverage
        path: .
        
    - name: combining_data
      run: |
        dir
        python -m pip install coverage
        python -m coverage combine cov1.dat cov2.dat cov3.dat cov4.dat
        python -m coverage xml

    - name: upload
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        env_vars: OS,PYTHON
        override_branch: ${{env.branch}}
